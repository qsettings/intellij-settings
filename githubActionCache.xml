<application>
  <component name="GitHubActionCache">
    <option name="actions">
      <map>
        <entry key="actions/checkout@v4">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="clean" value="r[false] def[true] Whether to execute `git clean -ffdx &amp;&amp; git reset --hard HEAD` before fetching" />
                  <entry key="fetch-depth" value="r[false] def[1] Number of commits to fetch. 0 indicates all history for all branches and tags." />
                  <entry key="fetch-tags" value="r[false] def[false] Whether to fetch tags, even if fetch-depth &gt; 0." />
                  <entry key="filter" value="r[false] def[null]" />
                  <entry key="github-server-url" value="r[false]  The base URL for the GitHub instance that you are trying to clone from, will use environment defaults to fetch from the same instance that the workflow is running from unless specified. Example URLs are https://github.com or https://my-ghes-server.example.com" />
                  <entry key="lfs" value="r[false] def[false] Whether to download Git-LFS files" />
                  <entry key="path" value="r[false]  Relative path under $GITHUB_WORKSPACE to place the repository" />
                  <entry key="persist-credentials" value="r[false] def[true] Whether to configure the token or SSH key with the local git config" />
                  <entry key="ref" value="r[false] " />
                  <entry key="repository" value="r[false] def[${{ github.repository }}] Repository name with owner. For example, actions/checkout" />
                  <entry key="set-safe-directory" value="r[false] def[true] Add repository path as safe.directory for Git global config by running `git config --global --add safe.directory &lt;path&gt;`" />
                  <entry key="show-progress" value="r[false] def[true] Whether to show progress status output when fetching." />
                  <entry key="sparse-checkout" value="r[false] def[null]" />
                  <entry key="sparse-checkout-cone-mode" value="r[false] def[true]" />
                  <entry key="ssh-key" value="r[false] " />
                  <entry key="ssh-known-hosts" value="r[false] " />
                  <entry key="ssh-strict" value="r[false] def[true]" />
                  <entry key="ssh-user" value="r[false] def[git]" />
                  <entry key="submodules" value="r[false] def[false]" />
                  <entry key="token" value="r[false] def[${{ github.token }}]" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/actions/checkout/v4/action.yml" />
                  <entry key="expiryTime" value="1716857423789" />
                  <entry key="githubUrl" value="https://github.com/actions/checkout/tree/v4#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="actions/checkout" />
                  <entry key="usesValue" value="actions/checkout@v4" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
        <entry key="codecov/codecov-action@v4">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="codecov_yml_path" value="r[false]  Specify the path to the Codecov YML" />
                  <entry key="commit_parent" value="r[false]  Override to specify the parent commit SHA" />
                  <entry key="directory" value="r[false]  Directory to search for coverage reports." />
                  <entry key="disable_file_fixes" value="r[false]  Disable file fixes to ignore common lines from coverage (e.g. blank lines or empty brackets)" />
                  <entry key="disable_safe_directory" value="r[false]  Disable setting safe directory. Set to true to disable." />
                  <entry key="disable_search" value="r[false]  Disable search for coverage files. This is helpful when specifying what files you want to upload with the --file option." />
                  <entry key="dry_run" value="r[false]  Don't upload files to Codecov" />
                  <entry key="env_vars" value="r[false]  Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)" />
                  <entry key="exclude" value="r[false]  Folders to exclude from search" />
                  <entry key="fail_ci_if_error" value="r[false]  Specify whether or not CI build should fail if Codecov runs into an error during upload" />
                  <entry key="file" value="r[false]  Path to coverage file to upload" />
                  <entry key="files" value="r[false]  Comma-separated list of files to upload" />
                  <entry key="flags" value="r[false]  Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)" />
                  <entry key="git_service" value="r[false]  Override the git_service (e.g. github_enterprise)" />
                  <entry key="handle_no_reports_found" value="r[false]  Raise no exceptions when no coverage reports found" />
                  <entry key="job_code" value="r[false]  The job code" />
                  <entry key="name" value="r[false]  User defined upload name. Visible in Codecov UI" />
                  <entry key="network_filter" value="r[false]  Specify a filter on the files listed in the network section of the Codecov report. This will only add files whose path begin with the specified filter. Useful for upload-specific path fixing" />
                  <entry key="network_prefix" value="r[false]  Specify a prefix on files listed in the network section of the Codecov report. Useful to help resolve path fixing" />
                  <entry key="os" value="r[false]  Override the assumed OS. Options are linux | macos | windows." />
                  <entry key="override_branch" value="r[false]  Specify the branch name" />
                  <entry key="override_build" value="r[false]  Specify the build number" />
                  <entry key="override_build_url" value="r[false]  The URL of the build where this is running" />
                  <entry key="override_commit" value="r[false]  Specify the commit SHA" />
                  <entry key="override_pr" value="r[false]  Specify the pull request number" />
                  <entry key="plugin" value="r[false]  plugins to run. Options: xcode, gcov, pycoverage. The default behavior runs them all." />
                  <entry key="plugins" value="r[false]  Comma-separated list of plugins for use during upload." />
                  <entry key="report_code" value="r[false]  The code of the report. If unsure, do not include" />
                  <entry key="root_dir" value="r[false]  Used when not in git/hg project to identify project root directory" />
                  <entry key="slug" value="r[false]  Specify the slug manually (Enterprise use)" />
                  <entry key="token" value="r[false]  Repository Codecov token. Used to authorize report uploads" />
                  <entry key="url" value="r[false]  Specify the base url to upload (Enterprise use)" />
                  <entry key="use_legacy_upload_endpoint" value="r[false]  Use the legacy upload endpoint" />
                  <entry key="use_oidc" value="r[false]  Use OIDC instead of token. This will ignore any token supplied" />
                  <entry key="verbose" value="r[false]  Specify whether the Codecov output should be verbose" />
                  <entry key="version" value="r[false]  Specify which version of the Codecov CLI should be used. Defaults to `latest`" />
                  <entry key="working-directory" value="r[false]  Directory in which to execute codecov.sh" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/codecov/codecov-action/v4/action.yml" />
                  <entry key="expiryTime" value="1716857423806" />
                  <entry key="githubUrl" value="https://github.com/codecov/codecov-action/tree/v4#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="codecov/codecov-action" />
                  <entry key="usesValue" value="codecov/codecov-action@v4" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
        <entry key="crate-ci/typos@v1.21.0">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="config" value="r[false]  Use a custom config file." />
                  <entry key="extend_identifiers" value="r[false]  Comma separated list of extend identifiers, like someone's name" />
                  <entry key="extend_words" value="r[false]  Comma separated list of extend words." />
                  <entry key="files" value="r[false]  Files or patterns to check" />
                  <entry key="isolated" value="r[false] def[false] Ignore implicit configuration files" />
                  <entry key="write_changes" value="r[false] def[false] Write changes to the repository" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/crate-ci/typos/v1.21.0/action.yml" />
                  <entry key="expiryTime" value="1716857425059" />
                  <entry key="githubUrl" value="https://github.com/crate-ci/typos/tree/v1.21.0#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="crate-ci/typos" />
                  <entry key="usesValue" value="crate-ci/typos@v1.21.0" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
        <entry key="dtolnay/rust-toolchain@master">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="components" value="r[false]  Comma-separated list of components to be additionally installed" />
                  <entry key="target" value="r[false]  Alias for `targets`" />
                  <entry key="targets" value="r[false]  Comma-separated list of target triples to install for this toolchain" />
                  <entry key="toolchain" value="r[true]  Rust toolchain specification -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/dtolnay/rust-toolchain/master/action.yml" />
                  <entry key="expiryTime" value="1716857423790" />
                  <entry key="githubUrl" value="https://github.com/dtolnay/rust-toolchain/tree/master#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="dtolnay/rust-toolchain" />
                  <entry key="usesValue" value="dtolnay/rust-toolchain@master" />
                </map>
              </option>
              <option name="outputs">
                <map>
                  <entry key="cachekey" value=" A short hash of the rustc version, appropriate for use as a cache key. &quot;20220627a831&quot;" />
                  <entry key="name" value=" Rustup's name for the selected version of the toolchain. &quot;1.62.0&quot;" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
        <entry key="dtolnay/rust-toolchain@nightly">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="components" value="r[false]  Comma-separated list of components to be additionally installed" />
                  <entry key="target" value="r[false]  Alias for `targets`" />
                  <entry key="targets" value="r[false]  Comma-separated list of target triples to install for this toolchain" />
                  <entry key="toolchain" value="r[false] def[nightly] Rust toolchain specification -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/dtolnay/rust-toolchain/nightly/action.yml" />
                  <entry key="expiryTime" value="1716857425059" />
                  <entry key="githubUrl" value="https://github.com/dtolnay/rust-toolchain/tree/nightly#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="dtolnay/rust-toolchain" />
                  <entry key="usesValue" value="dtolnay/rust-toolchain@nightly" />
                </map>
              </option>
              <option name="outputs">
                <map>
                  <entry key="cachekey" value=" A short hash of the rustc version, appropriate for use as a cache key. &quot;20220627a831&quot;" />
                  <entry key="name" value=" Rustup's name for the selected version of the toolchain. &quot;1.62.0&quot;" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
        <entry key="dtolnay/rust-toolchain@stable">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="components" value="r[false]  Comma-separated list of components to be additionally installed" />
                  <entry key="target" value="r[false]  Alias for `targets`" />
                  <entry key="targets" value="r[false]  Comma-separated list of target triples to install for this toolchain" />
                  <entry key="toolchain" value="r[false] def[stable] Rust toolchain specification -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/dtolnay/rust-toolchain/stable/action.yml" />
                  <entry key="expiryTime" value="1716857423803" />
                  <entry key="githubUrl" value="https://github.com/dtolnay/rust-toolchain/tree/stable#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="dtolnay/rust-toolchain" />
                  <entry key="usesValue" value="dtolnay/rust-toolchain@stable" />
                </map>
              </option>
              <option name="outputs">
                <map>
                  <entry key="cachekey" value=" A short hash of the rustc version, appropriate for use as a cache key. &quot;20220627a831&quot;" />
                  <entry key="name" value=" Rustup's name for the selected version of the toolchain. &quot;1.62.0&quot;" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
        <entry key="giraffate/clippy-action@v1">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="clippy_flags" value="r[false]  clippy flags. (cargo clippy --color never -q --message-format json `&lt;clippy_flags&gt;`)" />
                  <entry key="fail_on_error" value="r[false] def[false]" />
                  <entry key="filter_mode" value="r[false] def[added]" />
                  <entry key="github_token" value="r[true] def[${{ github.token }}] GITHUB_TOKEN." />
                  <entry key="level" value="r[false] def[error] Report level for reviewdog [info,warning,error]" />
                  <entry key="reporter" value="r[false] def[github-pr-check] Reporter of reviewdog command [github-pr-check,github-pr-review,github-check]." />
                  <entry key="reviewdog_flags" value="r[false]  Additional reviewdog flags" />
                  <entry key="reviewdog_version" value="r[false] def[latest] the version of reviewdog" />
                  <entry key="tool_name" value="r[false] def[clippy] Tool name to use for reviewdog reporter" />
                  <entry key="workdir" value="r[false] def[.] Working directory relative to the root directory." />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/giraffate/clippy-action/v1/action.yml" />
                  <entry key="expiryTime" value="1716857425059" />
                  <entry key="githubUrl" value="https://github.com/giraffate/clippy-action/tree/v1#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="giraffate/clippy-action" />
                  <entry key="usesValue" value="giraffate/clippy-action@v1" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
        <entry key="taiki-e/install-action@cargo-hack">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="checksum" value="r[false] def[true] Whether to enable checksums" />
                  <entry key="tool" value="r[false] def[cargo-hack] Tools to install (comma-separated list)" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/taiki-e/install-action/cargo-hack/action.yml" />
                  <entry key="expiryTime" value="1716857425059" />
                  <entry key="githubUrl" value="https://github.com/taiki-e/install-action/tree/cargo-hack#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="taiki-e/install-action" />
                  <entry key="usesValue" value="taiki-e/install-action@cargo-hack" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
        <entry key="taiki-e/install-action@cargo-llvm-cov">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="checksum" value="r[false] def[true] Whether to enable checksums" />
                  <entry key="tool" value="r[false] def[cargo-llvm-cov] Tools to install (comma-separated list)" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/taiki-e/install-action/cargo-llvm-cov/action.yml" />
                  <entry key="expiryTime" value="1716857423805" />
                  <entry key="githubUrl" value="https://github.com/taiki-e/install-action/tree/cargo-llvm-cov#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="taiki-e/install-action" />
                  <entry key="usesValue" value="taiki-e/install-action@cargo-llvm-cov" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
      </map>
    </option>
  </component>
</application>